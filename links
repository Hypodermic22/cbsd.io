docs/cbsd/tutorials/jail-description.md:It is advisable to maintain meaningful descriptions as your collection of jails grows. In addition it can be quite convenient to aggregate this information in order to create dashboards and build jail maps. One example of how this could look is the following simple script: [jmap2html.sh.html](files/jmap2html.sh) which generates an overview in the form of a HTML page [dashboard sample](https://www.bsdstore.ru/en/misc/dashboard/index.html)
docs/cbsd/tutorials/starting-and-stoping-VM.md:If you have the appropriate build of FreeBSD and **CBSD** not less **11.2.0**, you can take advantage of instant start of the virtual machine from [checpoint](https://www.bsdstore.ru/en/12.0.x/wf_bcheckpoint_ssi.html), bypassing the boot phase. To do this, use the argument **checkpoint=** with name of checkpoint
docs/cbsd/tutorials/jail-limit-control.md:1) Let's create an AMP jail and have it run a php script that performs some work (such as [bench.zip](https://www.bsdstore.ru/en/misc/bench.zip) taken from [php-benchmark-script](http://www.php-benchmark-script.com/)). We then clone the jail, calling the first **highprio1** and the second **lowprio1**. Using **cbsd jrctl-tui** we give the first the highest possible priority **-20**, and set the second jail to the lowest priority of **20**. In addition we limit the jail to one core through **cpuset** with **cbsd jconfig*** (single-core systems are hard to come by these days and smart schedulers do not allow for a clean experiment without taking this step ;-).
docs/cbsd/tutorials/jail-limit-control.md:![](https://www.bsdstore.ru/img/jrctl1.png)
docs/cbsd/tutorials/jail-limit-control.md:![](https://www.bsdstore.ru/img/jrctl2.png)
docs/cbsd/tutorials/Attaching-to-terminal.md:With a custom call, you can use [CBSD variables](https://www.bsdstore.ru/en/12.0.x/wf_cbsd_variables_ssi.html) - for this or that environment
docs/cbsd/tutorials/Bhyve-Live-migration.md:This functional is a continuation of the [checkpoints](https://www.bsdstore.ru/en/12.0.x/wf_bcheckpoint_ssi.html) functional
docs/cbsd/tutorials/Bhyve-Live-migration.md:At the moment, the necessary condition is the presence of DFS, which in the case of **CBSD** should not be a problem ( more: [lack of binding to ZFS](https://www.bsdstore.ru/en/articles/cbsd_with_dfs.html)). At the moment, the work tested on **NFSv3,v4** and **GlusterFS** ( **Ceph** in the testing process )
docs/cbsd/tutorials/Bhyve-Live-migration.md:Besides **CBSD** nodes, which are exchanged virtual machines, must be added to the **CBSD** cluster via the [node](https://www.bsdstore.ru/en/12.0.x/wf_node_add_ssi.html) command.
docs/cbsd/docs/building-upgrading-bases.md:When you have the base in `${workdir}/basejail`,you can go to the [jail creation](https://www.bsdstore.ru/en/12.0.x/wf_jcreate_ssi.html).
docs/cbsd/docs/cbsd-fetch.md:*  Adjust the **sha256sum** value in a particular profile by setting **sha256sum=0**. When **sha256sum=0**, this causes  to skip the CRC check. Refer to the section [**CBSD** profiles](https://www.bsdstore.ru/en/12.0.x/wf_profiles_ssi.html) for details on how to overwrite certain parameters.
docs/cbsd/docs/what-you-need-to-know-about.md:One important thing to note in regards to security are the directories `${workdir}/.rssh` and `${workdir}/.ssh`. These dirs contain the private RSA keys for the remote user CBSD nodes (.rssh) and the local nodes(.ssh). Make sure that the data in these directories are not available to other users of the system. For more information, please see the article about [GELI](https://www.bsdstore.ru/en/cbsd_geli.html) encryption. By default, the key can be read only by a system CBSD user.
docs/cbsd/docs/what-you-need-to-know-about.md:Finally, be sure to read about the modifications that CBSD does to the system. This [page](https://www.bsdstore.ru/en/custom_freecbsd.html) describes all of the modifications that are carried out by CBSD scripts after installing on a FreeBSD system.
docs/cbsd/docs/what-you-need-to-know-about.md:Read more about [counting jail traffic](https://www.bsdstore.ru/en/12.0.x/wf_jailtraffic_ssi.html).
docs/cbsd/docs/what-you-need-to-know-about.md:Read more about [expose](https://www.bsdstore.ru/en/12.0.x/wf_expose_ssi.html).
docs/cbsd/docs/what-you-need-to-know-about.md:While the **CBSD** project strives to be bug free, like any software, bugs happen. If a component or tool that is part of **CBSD** crashes, or returns unexpected data or behaviour, [**CBSD** command debuging](https://www.bsdstore.ru/en/cmdsyntax_cbsd.html#cmddebug) can be enabled. If the bug is reproducible, and an actaul bug discovered, please report the issue via e-mail: **CBSD @**(at) **bsdstore.ru**, or better yet submit a pull request that identifies the issue found, and contains the code to resolve the issue.
docs/cbsd/docs/installing-cbsd.md:**CBSD** â€” is a collection of tools simplifying the work with jails scripts, which will work on any hardware that runs FreeBSD. This guide assumes that you are installing CBSD on a freshly installed FreeBSD system as a number of configuration files [can be changed during install](https://www.bsdstore.ru/en/custom_freecbsd.html).
docs/cbsd/docs/cbsd-web.md:The developers are very interested in feedback by those using **ClonOS**. The more testing, and feedback provided, the quicker **ClonOS** will make it into the ports tree. Please click [here](https://www.bsdstore.ru/en/feedback.html) for more information on submitting feedback.
docs/cbsd/docs/cbsd-variables.md:**CBSD** is written taking into account the extensibility and flexibility, giving system engineers the opportunity to increase the functionality of the framework through modules or integration with various other tools through hooks available at various stages of script execution, such as such as [pre/post start/stop](https://www.bsdstore.ru/en/12.0.x/wf_jconfig_ssi.html#execscript) hooks or customization of blogin/jlogin command.
docs/cbsd/docs/freebsd-bhyve.md:read for [CBSD/bhyve](https://www.bsdstore.ru/en/articles/cbsd_vm_hook_dhcpd.html)
docs/cbsd/docs/cbsd-rcconf.md:System commands for starts and stops jail. If you want to write additional scripts executed by starting and stopping jails see: [Jail config](https://www.bsdstore.ru/en/12.0.x/wf_jconfig_ssi.html#execscript)
